kind: Service
apiVersion: v1
metadata:
  name: auth-service
spec:
  type: NodePort
  selector:
    app: auth-app 
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8000
---
# Auth Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-deployment
  labels: 
    name: auth-app
spec:
  selector:
    matchLabels:
      app: auth-app
  template:
    metadata:
      name: auth-1
      labels:
        app: auth-app
    spec: 
      containers:
      - name: auth-1
        image: gmoney-auth-image:v0
        env:
        - name: DATABASE_URI
          valueFrom:
            secretKeyRef:
              name: db
              key: db_uri
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: flask
              key: secret_key
        - name: SECURITY_PASSWORD_SALT
          valueFrom:
            secretKeyRef:
              name: flask
              key: password_salt
---
# Postgresql Volume
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pv-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---
# Postgres StatefulSet
 
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: postgres
spec:
  selector:
    matchLabels:
      app: auth-app
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: auth-app
    spec:
      containers:
      - image: postgres:9.6
        name: postgres
        command: [ "/bin/sh", "-c", "--" ]
        args: [ "while true; do sleep 3000; done;" ]
        env:
        - name: PG_MASTER_USER
          valueFrom:
            secretKeyRef:
              name: db-variables
              key: master_username
        - name: PGHOST
          value: /tmp
        - name: PG_MODE
          value: master
        - name: PG_MASTER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-variables
              key: master_password
        - name: PG_USER
          valueFrom:
            secretKeyRef:
              name: db-variables
              key: user_username
        - name: PG_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-variables
              key: user_password
        - name: PG_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-variables
              key: root_password
        - name: PG_DATABASE
          valueFrom:
            secretKeyRef:
              name: db-variables
              key: database
        ports:
        - containerPort: 5432
          name: postgres
        volumeMounts:
        - name: postgres-persistent-storage
          mountPath: /pgdata
      volumes:
      - name: postgres-persistent-storage
        persistentVolumeClaim:
          claimName: postgres-pv-claim
